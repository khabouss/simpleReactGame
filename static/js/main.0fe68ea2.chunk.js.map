{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom_client__WEBPACK_IMPORTED_MODULE_1__","react_dom_client__WEBPACK_IMPORTED_MODULE_1___default","root","ReactDOM","createRoot","document","getElementById","x","y","size","NavBar","a","createElement","class","href","Footer","speed","objY","objX","gameOver","refreshPage","window","location","reload","StartAgain","id","onClick","Canvas","props","canvasRef","useRef","draw","ctx","canvas","fillStyle","beginPath","arc","Math","PI","fill","useEffect","max","current","context","getContext","clearRect","width","height","addEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","o","preventDefault","font","textAlign","fillText","showMsg","abs","floor","random","Object","assign","ref","setInterval","element","render"],"mappings":"+IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAAK,EAAAC,GAIME,GAJNR,EAAA,IAIaS,IAASC,WAAWC,SAASC,eAAe,UAErDC,EAAI,GACJC,EAAI,GAEJC,EAAO,GACX,SAASC,IACP,OACEZ,EAAAa,EAAAC,cAAA,OAAKC,MAAM,UACTf,EAAAa,EAAAC,cAAA,KAAGC,MAAM,SAASC,KAAK,IAAvB,SAKN,SAASC,IACP,OACEjB,EAAAa,EAAAC,cAAA,OAAKC,MAAM,UACTf,EAAAa,EAAAC,cAAA,iCAAyBI,IAK/B,IAEIC,EAAa,GAALR,EACRS,EAAO,IACPC,GAAW,EACXH,EAAQ,EAEZ,SAASI,IACPC,OAAOC,SAASC,QAAO,GAGzB,SAASC,IACP,OACE1B,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAAA,UAAQa,GAAG,gBAAgBC,QAASN,GAApC,gBASN,IAAMO,EAAS,SAAAC,GAEb,IAAMC,EAAYC,iBAAO,MAInBC,EAAO,SAACC,EAAKC,GACjBD,EAAIE,UAAY,OAChBF,EAAIG,YACJH,EAAII,IAAI7B,EAAGC,EAAGC,EAAM,EAAG,EAAI4B,KAAKC,IAChCN,EAAIO,OAEJP,EAAIG,YACJH,EAAIE,UAAY,OAChBF,EAAII,IAAIlB,EAAMD,EAAW,EAALR,EAAQ,EAAG,EAAI4B,KAAKC,IACxCN,EAAIO,QA0DN,OAzCAC,oBAAU,WAER,IAtCkBC,EA8BFT,EAQVC,EAASJ,EAAUa,QACnBC,EAAUV,EAAOW,WAAW,MAClCD,EAAQE,UAAU,EAAG,EAAGZ,EAAOa,MAAOb,EAAOc,QAE7Cd,EAAOe,iBAAiB,YAAa,SAASC,GAC5C,IAAMC,EAAOjB,EAAOkB,wBACpB5C,EAAI0C,EAAMG,QAAUF,EAAKG,KACzB7C,EAAIyC,EAAMK,QAAUJ,EAAKK,MAG3BtB,EAAOe,iBAAiB,QAAS,SAASC,GACxCO,IAGFvB,EAAOe,iBAAiB,cAAe,SAASC,GAC9CA,EAAMQ,iBACM,GAARhD,GACFA,MAICU,EApCP,SAAiBa,EAAKC,GACpBD,EAAIE,UAAY,OAChBF,EAAI0B,KAAO,aACX1B,EAAI2B,UAAY,SAChB3B,EAAI4B,SAAS,YAAa3B,EAAOa,MAAM,EAAI,IAAKb,EAAOc,OAAO,GAmC5Dc,CAAQlB,EAASV,GAFjBF,EAAKY,IAGP1B,GAAMD,EAAM,GAEI,EAALP,GAAUD,EAAIC,GAAQ4B,KAAKyB,IAAI5C,EAAOX,IAAME,IACrDU,GAAW,GAETF,GAAQgB,EAAOc,OAAc,EAALtC,IAC1BQ,EAAa,GAALR,EArEQgC,EAsEIR,EAAOa,MAA3B5B,EArEGmB,KAAK0B,MAAM1B,KAAK2B,SAAWvB,GAsE9BzB,GAAO,GAEJG,KA3CWa,EA4CLW,GA3CPT,UAAY,OAChBF,EAAI0B,KAAO,aACX1B,EAAI4B,SAAS5C,EAAO,GAAI,MA0CvB,CAACe,IAEGjC,EAAAa,EAAAC,cAAA,SAAAqD,OAAAC,OAAA,CAAQzC,GAAG,UAAUqB,MAAO,IAAKC,OAAQ,IAAKoB,IAAKtC,GAAeD,KAG3EwC,YAAY,WACV,IAAMC,EACJvE,EAAAa,EAAAC,cAAA,WACEd,EAAAa,EAAAC,cAACF,EAAD,MACAZ,EAAAa,EAAAC,cAACe,EAAD,MACA7B,EAAAa,EAAAC,cAACG,EAAD,MACAjB,EAAAa,EAAAC,cAACY,EAAD,OAGJtB,EAAKoE,OAAOD,IACX","file":"static/js/main.0fe68ea2.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst dictionary = '012345678910ABCDEF'\nvar x = 15\nvar y = 15\n\nvar size = 20\nfunction NavBar() {\n  return (\n    <div class=\"topnav\">\n      <a class=\"active\" href=\"\">Home</a>\n    </div>\n  )\n}\n\nfunction Footer() {\n  return (\n    <div class=\"footer\">\n      <p>speed of circle is : {speed}</p>\n    </div>\n  )\n}\n\nlet o = 0;\nlet l = 500\nvar objY = -size*2;\nvar objX = 500;\nvar gameOver = false\nlet speed = 5\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nfunction StartAgain(){\n  return (\n    <div>\n      <button id='startAgainBtn' onClick={refreshPage}>Start Again</button>\n    </div>\n  );\n}\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nconst Canvas = props => {\n\n  const canvasRef = useRef(null)\n\n\n\n  const draw = (ctx, canvas) => {\n    ctx.fillStyle = \"#fff\"\n    ctx.beginPath()\n    ctx.arc(x, y, size, 0, 2 * Math.PI)\n    ctx.fill()\n\n    ctx.beginPath()\n    ctx.fillStyle = \"#0f0\"\n    ctx.arc(objX, objY, size*2, 0, 2 * Math.PI)\n    ctx.fill()\n    \n  }\n\n  function showMsg(ctx, canvas) {\n    ctx.fillStyle = \"#fff\"\n    ctx.font = '48px serif';\n    ctx.textAlign = 'centre'\n    ctx.fillText('Game Over', canvas.width/2 - 100, canvas.height/2);\n  }\n\n  function showCoin(ctx, canvas) {\n    ctx.fillStyle = \"#fff\"\n    ctx.font = '30px serif';\n    ctx.fillText(speed, 10, 50);\n  }\n\n  useEffect(() => {\n    \n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d')\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    canvas.addEventListener('mousemove', function(event) {\n      const rect = canvas.getBoundingClientRect()\n      x = event.clientX - rect.left\n      y = event.clientY - rect.top\n    });\n\n    canvas.addEventListener('click', function(event) {\n      o++;\n    });\n\n    canvas.addEventListener('contextmenu', function(event) {\n      event.preventDefault()\n      if (size != 0)\n        size--;\n    });\n\n    //Our draw come here\n    if (!gameOver)\n      draw(context, canvas)\n    else\n      showMsg(context, canvas)\n    objY+=speed/2;\n    \n    if (objY + size*2 >= y - size && Math.abs(objX - x) <= size)\n      gameOver = true\n\n    if (objY >= canvas.height + size*2){\n      objY = -size*2\n      objX = getRandomInt(canvas.width)\n      speed+=1;\n    }\n    if (!gameOver)\n      showCoin(context, canvas)\n  }, [draw])\n\n  return <canvas id='mCanvas' width={500} height={500} ref={canvasRef} {...props} />\n}\n\nsetInterval(function () {\n  const element = (\n    <div>\n      <NavBar />\n      <Canvas />\n      <Footer />\n      <StartAgain/>\n    </div>\n  );\n  root.render(element);\n}, 10);\n"],"sourceRoot":""}